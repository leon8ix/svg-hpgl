{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { parsePath, PathInstruction } from './svg-path';\r\nimport getBezierPoints from 'adaptive-bezier-curve';\r\n\r\nexport type HPGLCommand = 'PU' | 'PD' | 'PA' | `SP${number}`;\r\nexport type HPGLInstruction = [HPGLCommand, ...number[]];\r\nexport type HPGLProgram = HPGLInstruction[];\r\n\r\nexport function buildHPGL(program: HPGLProgram, prefix = '', suffix = ''): string {\r\n\treturn prefix + program.map(([cmd, ...vals]) => cmd + vals.join(',') + ';').join('') + suffix;\r\n}\r\n\r\n/** defaults to any stroked element, uses selector in this prio: selector > stroke > [stroke] */\r\nexport type PenSelectors = {\r\n\tpen: number;\r\n\t/** [stroke], [stroke=magenta] or any other querySelector */\r\n\tselector?: string;\r\n\t/** should use values retrieved by getSvgStrokeColors */\r\n\tstroke?: string;\r\n}[];\r\n\r\ntype SVGtoHPGLOptions = {\r\n\tsegmentsPerUnit?: number;\r\n\tscale?: number;\r\n\toffsetX?: number;\r\n\toffsetY?: number;\r\n};\r\n\r\nexport function svgToHPGL(\r\n\tsvg: SVGSVGElement,\r\n\tpens: PenSelectors = [{ pen: 1 }],\r\n\t{ segmentsPerUnit = 1, scale = 1, offsetX = 0, offsetY = 0 }: SVGtoHPGLOptions\r\n): HPGLProgram {\r\n\tconst hpgl: HPGLProgram = [['PA']];\r\n\r\n\tpens.forEach(({ pen, selector, stroke }) => {\r\n\t\thpgl.push([`SP${pen}`], ['PU']);\r\n\r\n\t\tsvg.querySelectorAll(selector ?? (stroke ? `[stroke=\"${stroke}\"]` : '[stroke]')).forEach(el => {\r\n\t\t\tif (!(el instanceof SVGGraphicsElement)) return;\r\n\t\t\tconst tf = getTransformer(el, scale, offsetX, offsetY);\r\n\r\n\t\t\tif (el instanceof SVGLineElement) {\r\n\t\t\t\t// <line>\r\n\t\t\t\thpgl.push(PU(tf, svgVal(el.x1), svgVal(el.y1)));\r\n\t\t\t\thpgl.push(PD(tf, svgVal(el.x2), svgVal(el.y2)));\r\n\t\t\t\treturn;\r\n\t\t\t} else if (el instanceof SVGPolylineElement) {\r\n\t\t\t\t// <polyline>\r\n\t\t\t\tconst points = el.points;\r\n\t\t\t\tif (points[0]) hpgl.push(PU(tf, points[0]?.x, points[0]?.y));\r\n\t\t\t\tfor (const pt of points) hpgl.push(PD(tf, pt.x, pt.y));\r\n\t\t\t\treturn;\r\n\t\t\t} else if (el instanceof SVGCircleElement) {\r\n\t\t\t\t// <circle>\r\n\t\t\t\tconst { cx, cy, r } = svgVals(el, ['cx', 'cy', 'r']);\r\n\t\t\t\tconst circum = 2 * Math.PI * r;\r\n\t\t\t\tconst segments = circum * segmentsPerUnit;\r\n\t\t\t\thpgl.push(PU(tf, cx + r, cy));\r\n\t\t\t\thpgl.push(...getArcPoints(cx, cy, r, r, 0, 2 * Math.PI, segments).map(pt => PD(tf, ...pt)));\r\n\t\t\t\treturn;\r\n\t\t\t} else if (el instanceof SVGEllipseElement) {\r\n\t\t\t\t// <ellipse>\r\n\t\t\t\tconst { cx, cy, rx, ry } = svgVals(el, ['cx', 'cy', 'rx', 'ry']);\r\n\t\t\t\tconst circum = Math.PI * (rx + ry); // approx.\r\n\t\t\t\tconst segments = circum * segmentsPerUnit;\r\n\t\t\t\thpgl.push(PU(tf, cx + rx, cy));\r\n\t\t\t\thpgl.push(...getArcPoints(cx, cy, rx, ry, 0, 2 * Math.PI, segments).map(pt => PD(tf, ...pt)));\r\n\t\t\t\treturn;\r\n\t\t\t} else if (el instanceof SVGRectElement) {\r\n\t\t\t\t// <rect>\r\n\t\t\t\tconst { width: w, height: h, x, y } = svgVals(el, ['width', 'height', 'x', 'y']);\r\n\t\t\t\tconst rx = Math.min(w / 2, svgVal(el.rx) || svgVal(el.ry) || 0);\r\n\t\t\t\tconst ry = Math.min(h / 2, svgVal(el.ry) || svgVal(el.rx) || 0);\r\n\t\t\t\tif (!rx || !ry) {\r\n\t\t\t\t\thpgl.push(PU(tf, x, y));\r\n\t\t\t\t\thpgl.push(PD(tf, x + w, y));\r\n\t\t\t\t\thpgl.push(PD(tf, x + w, y + h));\r\n\t\t\t\t\thpgl.push(PD(tf, x, y + h));\r\n\t\t\t\t\thpgl.push(PD(tf, x, y));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst circum = 0.25 * Math.PI * (rx + ry); // approx.\r\n\t\t\t\t\tconst segments = circum * segmentsPerUnit;\r\n\t\t\t\t\thpgl.push(\r\n\t\t\t\t\t\t...PUD(tf, [\r\n\t\t\t\t\t\t\t...getArcPoints(x + rx, y + ry, rx, ry, Math.PI, 1.5 * Math.PI, segments),\r\n\t\t\t\t\t\t\t...getArcPoints(x + w - rx, y + ry, rx, ry, 1.5 * Math.PI, 2 * Math.PI, segments),\r\n\t\t\t\t\t\t\t...getArcPoints(x + w - rx, y + h - ry, rx, ry, 0, 0.5 * Math.PI, segments),\r\n\t\t\t\t\t\t\t...getArcPoints(x + rx, y + h - ry, rx, ry, 0.5 * Math.PI, Math.PI, segments),\r\n\t\t\t\t\t\t\t[x, y + ry],\r\n\t\t\t\t\t\t])\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t} else if (el instanceof SVGPathElement) {\r\n\t\t\t\t// <path>\r\n\t\t\t\tconst d = el.getAttribute('d');\r\n\t\t\t\tif (!d) return;\r\n\t\t\t\tlet currX = 0;\r\n\t\t\t\tlet currY = 0;\r\n\t\t\t\tfunction updateCurr(ins: PathInstruction) {\r\n\t\t\t\t\tif ('x' in ins) currX = ins.x;\r\n\t\t\t\t\tif ('y' in ins) currY = ins.y;\r\n\t\t\t\t}\r\n\t\t\t\tconst instructions = parsePath(d);\r\n\t\t\t\tconsole.log('Path', instructions);\r\n\t\t\t\tinstructions.forEach((ins, insI) => {\r\n\t\t\t\t\tconst { cmd } = ins;\r\n\t\t\t\t\tif (cmd === 'M') {\r\n\t\t\t\t\t\thpgl.push(PU(tf, ins.x, ins.y));\r\n\t\t\t\t\t} else if (cmd === 'L') {\r\n\t\t\t\t\t\thpgl.push(PD(tf, ins.x, ins.y));\r\n\t\t\t\t\t} else if (cmd === 'H') {\r\n\t\t\t\t\t\thpgl.push(PD(tf, ins.x, currY));\r\n\t\t\t\t\t} else if (cmd === 'V') {\r\n\t\t\t\t\t\thpgl.push(PD(tf, currX, ins.y));\r\n\t\t\t\t\t} else if (cmd === 'C') {\r\n\t\t\t\t\t\tconst points = getBezierPoints(\r\n\t\t\t\t\t\t\t[currX, currY],\r\n\t\t\t\t\t\t\t[ins.x1, ins.y1],\r\n\t\t\t\t\t\t\t[ins.x2, ins.y2],\r\n\t\t\t\t\t\t\t[ins.x, ins.y],\r\n\t\t\t\t\t\t\t10\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\thpgl.push(...PUD(tf, points));\r\n\t\t\t\t\t} else if (cmd === 'S') {\r\n\t\t\t\t\t\t// If the previous command was cubic Bézier (C or S): Reflect the second control point.\r\n\t\t\t\t\t\t// If the previous command was anything else: Treat the first control point as the current point.\r\n\t\t\t\t\t\tconst preCmd = instructions[insI - 1];\r\n\t\t\t\t\t\tconst preHasC2 = preCmd && 'x2' in preCmd && 'y2' in preCmd;\r\n\t\t\t\t\t\tconst x1 = preHasC2 ? 2 * currX - preCmd.x2 : currX;\r\n\t\t\t\t\t\tconst y1 = preHasC2 ? 2 * currY - preCmd.y2 : currY;\r\n\t\t\t\t\t\tconst points = getBezierPoints([currX, currY], [x1, y1], [ins.x2, ins.y2], [ins.x, ins.y], 10);\r\n\t\t\t\t\t\thpgl.push(...PUD(tf, points));\r\n\t\t\t\t\t\tupdateCurr(ins);\r\n\t\t\t\t\t} else if (cmd === 'Q') {\r\n\t\t\t\t\t} else if (cmd === 'T') {\r\n\t\t\t\t\t} else if (cmd === 'A') {\r\n\t\t\t\t\t} else if (cmd === 'Z') {\r\n\t\t\t\t\t\tconst firstIns = instructions[0];\r\n\t\t\t\t\t\tconst firstX = firstIns?.cmd === 'M' ? firstIns.x : 0;\r\n\t\t\t\t\t\tconst firstY = firstIns?.cmd === 'M' ? firstIns.y : 0;\r\n\t\t\t\t\t\thpgl.push(PD(tf, firstX, firstY));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateCurr(ins);\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\treturn hpgl;\r\n}\r\n\r\nfunction getTransformer(\r\n\telement: SVGGraphicsElement,\r\n\tscale = 1,\r\n\toffsetX = 0,\r\n\toffsetY = 0\r\n): (x: number, y: number) => [number, number] {\r\n\tconst svg = element.ownerSVGElement;\r\n\tif (!svg) {\r\n\t\tconsole.warn('Could not retrieve ownerSVGElement');\r\n\t\treturn (x: number, y: number) => [Math.round(x), Math.round(y)];\r\n\t}\r\n\r\n\tlet ctm = svg.createSVGMatrix();\r\n\tlet currEl: SVGElement | null = element;\r\n\r\n\twhile (currEl) {\r\n\t\tconst currCtm = currEl instanceof SVGGraphicsElement && currEl.transform.baseVal.consolidate()?.matrix;\r\n\t\tif (currCtm) ctm = currCtm.multiply(ctm);\r\n\t\tcurrEl = currEl.parentNode instanceof SVGElement ? currEl.parentNode : null;\r\n\t}\r\n\r\n\tconst point = svg.createSVGPoint();\r\n\r\n\treturn (x: number, y: number) => {\r\n\t\t(point.x = x), (point.y = y);\r\n\t\tconst pointT = point.matrixTransform(ctm);\r\n\t\treturn [Math.round(pointT.x * scale + offsetX), Math.round(pointT.y * scale + offsetY)];\r\n\t};\r\n}\r\n\r\nfunction svgVal(prop: SVGAnimatedLength) {\r\n\treturn prop.baseVal.value || 0;\r\n}\r\n\r\nfunction svgVals<T extends SVGGraphicsElement & Record<U, { baseVal: { value: number } }>, U extends keyof T>(\r\n\tel: T,\r\n\tprops: U[]\r\n) {\r\n\tconst vals = {} as Record<U, number>;\r\n\tfor (const prop of props) {\r\n\t\tif (!el[prop]?.baseVal) {\r\n\t\t\tconsole.warn(`Prop ${String(prop)} not in Element`, el);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tvals[prop] = el[prop].baseVal.value || 0;\r\n\t}\r\n\treturn vals;\r\n}\r\n\r\nfunction getArcPoints(\r\n\tcx: number,\r\n\tcy: number,\r\n\trx: number,\r\n\try: number,\r\n\tstartAngle: number,\r\n\tendAngle: number,\r\n\t/** Will be rounded and changed to min of `2` */\r\n\tsegments: number\r\n) {\r\n\tsegments = Math.max(2, Math.round(segments));\r\n\tconst arcPoints: [number, number][] = [];\r\n\tfor (let i = 0; i <= segments; i++) {\r\n\t\tconst angle = startAngle + (i * (endAngle - startAngle)) / segments;\r\n\t\tarcPoints.push([cx + rx * Math.cos(angle), cy + ry * Math.sin(angle)]);\r\n\t}\r\n\treturn arcPoints;\r\n}\r\n\r\nfunction PU(tf: ReturnType<typeof getTransformer>, x: number, y: number): HPGLInstruction {\r\n\treturn ['PU', ...tf(x, y)];\r\n}\r\nfunction PD(tf: ReturnType<typeof getTransformer>, x: number, y: number): HPGLInstruction {\r\n\treturn ['PD', ...tf(x, y)];\r\n}\r\nfunction PUD(tf: ReturnType<typeof getTransformer>, points: [number, number][]): HPGLInstruction[] {\r\n\treturn points.map((pt, i) => (i === 0 ? PU(tf, ...pt) : PD(tf, ...pt)));\r\n}\r\n\r\n/** Implements and expects absolute coords (PA)  */\r\nexport function hpglFindBBox(hpgl: HPGLProgram) {\r\n\tconst cmds: HPGLCommand[] = ['PU', 'PD', 'PA'];\r\n\tlet xMin: number, xMax: number, yMin: number, yMax: number;\r\n\txMin = xMax = yMin = yMax = 0;\r\n\thpgl.forEach(([cmd, x, y, ...vals]) => {\r\n\t\tif (cmds.includes(cmd) && x && y && vals.length === 0) {\r\n\t\t\tif (x < xMin) xMin = x;\r\n\t\t\tif (x > xMax) xMax = x;\r\n\t\t\tif (y < yMin) yMin = y;\r\n\t\t\tif (y > yMax) yMax = y;\r\n\t\t}\r\n\t});\r\n\treturn { xMin, xMax, yMin, yMax, width: xMax - xMin, height: yMax - yMin };\r\n}\r\n\r\nexport function drawHPGL(canvas: HTMLCanvasElement, hpgl: HPGLProgram, width: number, height: number): void {\r\n\tcanvas.width = width;\r\n\tcanvas.height = height;\r\n\tconst ctx = canvas.getContext('2d');\r\n\tif (!ctx) throw new Error('Context of canvas unavailable');\r\n\r\n\t// ctx.lineWidth = 1;\r\n\t// ctx.strokeStyle = '#000000';\r\n\tctx.clearRect(0, 0, width, height);\r\n\tctx.beginPath();\r\n\r\n\thpgl.forEach(([cmd, x, y, ...vals]) => {\r\n\t\t// console.log({ cmd, x, y, vals });\r\n\t\tif (x === undefined || y === undefined || vals.length) return;\r\n\t\tif (cmd === 'PU') {\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t} else if (cmd === 'PD') {\r\n\t\t\tctx.lineTo(x, y);\r\n\t\t}\r\n\t});\r\n\r\n\tctx.stroke();\r\n}\r\n\r\nexport function getSvgStrokeColors(svg: SVGSVGElement): Set<string> {\r\n\tconst colors = new Set<string>();\r\n\r\n\tsvg.querySelectorAll('[stroke]').forEach(el => {\r\n\t\tconst stroke = el.getAttribute('stroke');\r\n\t\tif (stroke) colors.add(stroke);\r\n\t});\r\n\treturn colors;\r\n}\r\n"]}